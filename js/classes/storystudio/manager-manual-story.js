/** Class ManagerManualStory */
var ManagerManualStory = (function () {
    /** Constructor */
    function ManagerManualStory(selector) {
        var self = this;
        this.$container = $(selector);
        this.$container.data("manager-manual-story", this);

        // Init Sortable on Stories
        this.sortable = new Sortable($('.story-container')[0], {
            animation: 100,
            ghostClass: "my-sortable-ghost",
            dragClass: "my-sortable-drag",
            handle: ".story-drag-handle",
            onEnd: function (evt) {
              let id = $(evt.item).data('story-id');
              let index = +evt.newIndex;
              $globalStoryManager.sortManualStory(id, index);
              $storyPlayer.updateStories($globalStoryManager.getAllStories());
            }
        });

        // Render stories to HTML
        ManagerManualStory.renderStories();

        // Binding events
        this.bindingEvents();
    }

    /** Binding Events */
    ManagerManualStory.prototype.bindingEvents = function () {
        var self = this;

        // Toggle new story Popover
        this.$container.find('#add-story').popover({
            content: function () {
              let $content = $($('.story-item-tmp').html());
              $content.find('.submit-button').addClass('add-story-submit');
              $content.find('.cancel-button').addClass('d-none');
              initIcheck($content.find('input[type=checkbox]'));
              initDatePicker($content.find('[data-toggle="datepicker"]'));
              return $content;
            },
            html: true,
            sanitize: false
        });
        // Submit new story
        $(document).on('click', '.add-story-submit', function () {
            let newStory = Utility.objectifyForm($(this).closest('form').serializeArray());
            newStory.id = StringUtility.uuidv4();
            newStory.isAutoGenerated = false;
            newStory.block = newStory.block == 'on';
            newStory.duration = +newStory.duration;
            newStory.latlng = newStory.type == 'global' ? [] : JSON.parse($(this).closest('form').find('[name=latlng]').val());
            newStory.countryName = newStory.type == 'global' ? 'Global' : $(this).closest('form').find('[name=countryName]').val();
            newStory.countryCode = newStory.type == 'global' ? 'glb' : $(this).closest('form').find('[name=countryCode]').val();
            $globalStoryManager.addManualStory(newStory);

            ManagerManualStory.renderStories();
            $storyPlayer.updateStories($globalStoryManager.getAllStories());
            self.$container.find('#add-story').popover('hide');
            notify('success', 'Successfully');
        });

        // Edit story
        this.$container.on('click', '.edit-story', function () {
            var $storyItem = $(this).closest('.local-story');
            var storyId = $storyItem.data('story-id');
            var stories = $globalStoryManager.getManualStories();
            var targetStory = stories.find(story => story.id == storyId);
            var $form = $('.story-item-tmp').find('form').clone();
            $form.find('.submit-button').addClass('edit-story-submit');
            $form.find('.cancel-button').addClass('edit-story-cancel');
            $form.find('[name=type]').val(targetStory.type);
            $form.find('[name=date]').val(targetStory.date);
            $form.find('[name=title]').val(targetStory.title);
            $form.find('[name=description]').val(targetStory.description);
            $form.find('[name=duration]').val(targetStory.duration);
            $form.find('[name=countryName]').val(targetStory.countryName);
            $form.find('[name=countryCode]').val(targetStory.countryCode);
            $form.find('[name=latlng]').val(JSON.stringify(targetStory.latlng));
            if (targetStory.block) $form.find('[name=block]').prop('checked', true);
            $storyItem.html($form);
            initIcheck('.story-container .checkbox');
            initDatePicker('[data-toggle="datepicker"]');
        });
        // Cancel Edit
        this.$container.on('click', '.edit-story-cancel', function () {
            ManagerManualStory.renderStories();
        });
        // Submit Edit
        this.$container.on('click', '.edit-story-submit', function () {
            let id = $(this).closest('.local-story').data('story-id');
            let editStory = Utility.objectifyForm($(this).closest('form').serializeArray());
            editStory.id = id;
            editStory.isAutoGenerated = false;
            editStory.block = editStory.block == 'on';
            editStory.duration = +editStory.duration;
            editStory.latlng = editStory.type == 'global' ? [] : JSON.parse($(this).closest('form').find('[name=latlng]').val());
            editStory.countryName = editStory.type == 'global' ? 'Global' : $(this).closest('form').find('[name=countryName]').val();
            editStory.countryCode = editStory.type == 'global' ? 'glb' : $(this).closest('form').find('[name=countryCode]').val();
            $globalStoryManager.updateManualStory(editStory);

            ManagerManualStory.renderStories();
            $storyPlayer.updateStories($globalStoryManager.getAllStories());
            notify('success', 'Successfully');
        });

        // Delete story
        this.$container.on('click', '.delete-story', function () {
            let id = $(this).closest('.local-story').data('story-id');
            $globalStoryManager.removeManualStory(id);

            ManagerManualStory.renderStories();
            $storyPlayer.updateStories($globalStoryManager.getAllStories());
            notify('success', 'Successfully');
        });
    };

    /** Convert 1 story object to HTML */
    ManagerManualStory.dataStoryToHtml = function (story) {
        return `<div class="local-story" data-story-id="` + story.id + `">
            <div class="content">
              <img class="icon" src="images/flags/`+ story.countryCode + `.svg" title="` + story.countryName + `" alt="image">
              <div class="text">
                <div class="title">`+ story.title + `</div>
                <div class="description">`+ story.description + `</div>
              </div>
            </div>
            <div class="story-metadata">
              <div class="story-date text-info" title="Story Date">
                <i class="far fa-calendar"></i> `+ story.date + `
              </div>
              <div class="story-duration" title="Story Duration">
                <i class="far fa-clock"></i> `+ story.duration + `ms
              </div>` + (story.block ? '<div class="story-block" title="Block Time Player"><i class="fa fa-pause"></i> Block</div>' : '') + `
            </div>
            <div class="story-action">
              <a class="edit-story" title="Edit"><i class="fa fa-edit"></i></a>
              <a class="delete-story" title="Delete"><i class="fa fa-trash-alt"></i></a>
            </div>
            <div class="story-drag-handle"><i class="fas fa-grip-lines"></i></div>
        </div>`;
    }

    /** Render all stories from local storage */
    ManagerManualStory.renderStories = function () {
        let manuals = $globalStoryManager.getManualStories();
        $('.story-container').html('');
        manuals.forEach(function (story) {
          let storyItem = ManagerManualStory.dataStoryToHtml(story);
          $(storyItem).appendTo('.story-container');
        });
        $('.story-container select[name="countryName"]').trigger('change');
        initIcheck('.story-container input[type=checkbox]');
        initDatePicker('[data-toggle="datepicker"]');
    }

    return ManagerManualStory;
})();