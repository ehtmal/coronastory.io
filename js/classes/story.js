/** Class Story */
var Story = (function () {

  /** Constructor */
  function Story(storyObj) {
    let flag = ` <img src='images/flags/${storyObj.countryCode}.svg' alt='flag' /> `;
    let icon = Story.getIconByType(storyObj.type);
    this.id = storyObj.id;
    this.type = storyObj.type;
    this.isAutoGenerated = storyObj.isAutoGenerated;
    this.title = Story.replaceShortCode(storyObj.title, storyObj.type, storyObj.countryName, flag, icon, storyObj.value, storyObj.date);
    this.description = Story.replaceShortCode(storyObj.description, storyObj.type, storyObj.countryName, flag, icon, storyObj.value, storyObj.date);
    this.date = storyObj.date;
    this.duration = storyObj.duration;
    this.block = storyObj.block;
    this.latlng = storyObj.latlng;
    this.countryName = storyObj.countryName;
    this.countryCode = storyObj.countryCode;
    this.value = storyObj.value;
  }

  /** Show Story */
  Story.prototype.show = function (animationTimeout, storyMap) {
    // Global Story
    if (this.type == 'global') {
      // TODO: auto render #global-story
      $('.restart-animation .title').html(this.title);
      $('.restart-animation .description').html(this.description);
      $('.restart-animation').css('animation', 'display-global-story ' + this.duration * 1.2 + 'ms linear 0ms');
      let el = $('.restart-animation'), newone = el.clone(true);
      el.before(newone);
      $('.restart-animation:last').remove();
    }
    // Local Story
    else if (this.type == 'local') {
      var popup = new L.popup({ closeButton: false, autoClose: false, autoPan: false, className: 'visibility-hidden mypopup', isStory: true })
        .setLatLng(this.latlng).setContent(this.getContent()).openOn(storyMap.map);
      $(popup._container).css('animation', 'display-local-story ' + this.duration * 1.2 + 'ms linear 0ms');
      $(popup._container).css('pointer-events', 'none');

      // Remove after timeline end
      setTimeout(function () { storyMap.map.removeLayer(popup); }, this.duration * 1.2);
    }
    // Auto Story
    else {
      var popup = new L.popup({ closeButton: false, autoClose: false, autoPan: false, className: 'visibility-hidden mypopup', isStory: true })
        .setLatLng(this.latlng).setContent(this.getContent()).openOn(storyMap.map);
      $(popup._container).css('animation', 'display-auto-story ' + this.duration + 'ms linear ' + animationTimeout + 'ms');
      $(popup._container).css('pointer-events', 'none');

      // Remove after timeline end
      setTimeout(function () { storyMap.map.removeLayer(popup); }, this.duration + animationTimeout);
    }
  }

  /** Get Story HTML */
  Story.prototype.getContent = function () {
    let content = "";
    if (this.type == "confirmed" || this.type == "dailyConfirmed") {
      content = '<div class="story-content confirmed">' +
        '<img class="icon" src="images/icons/confirmed.svg" alt="">' +
        '<div class="text">' +
        '<div class="title">' + this.title + '</div>' +
        '<div class="description">' + this.description + '</div>' +
        '</div>' +
        '</div>';
    } else if (this.type == "active" || this.type == "dailyActive") {
      content = '<div class="story-content active">' +
        '<img class="icon" src="images/icons/active.svg" alt="">' +
        '<div class="text">' +
        '<div class="title">' + this.title + '</div>' +
        '<div class="description">' + this.description + '</div>' +
        '</div>' +
        '</div>';
    } else if (this.type == "recovered" || this.type == "dailyRecovered") {
      content = '<div class="story-content recovered">' +
        '<img class="icon" src="images/icons/recovered.svg" alt="">' +
        '<div class="text">' +
        '<div class="title">' + this.title + '</div>' +
        '<div class="description">' + this.description + '</div>' +
        '</div>' +
        '</div>';
    } else if (this.type == "deaths" || this.type == "dailyDeaths") {
      content = '<div class="story-content deaths">' +
        '<img class="icon" src="images/icons/deaths.svg" alt="">' +
        '<div class="text">' +
        '<div class="title">' + this.title + '</div>' +
        '<div class="description">' + this.description + '</div>' +
        '</div>' +
        '</div>';
    } else if (this.type == "local") {
      content = '<div class="local-story">' +
        '<div class="title">' + this.title + '</div>' +
        '<div class="description">' + this.description + '</div>' +
        '</div>';
    }

    return content;
  }

  //#region Static Methods
  /** Replace short code */
  Story.replaceShortCode = function (string, item, location, flag, icon, value, date) {
    let str = StringUtility.replaceAll(string, '[ITEM]', item);
    let str1 = StringUtility.replaceAll(str, '[LOCATION]', location);
    let str2 = StringUtility.replaceAll(str1, '[FLAG]', flag);
    let str3 = StringUtility.replaceAll(str2, '[ICON]', icon);
    let str4 = StringUtility.replaceAll(str3, '[VALUE]', value);
    let str5 = StringUtility.replaceAll(str4, '[DATE]', date);
    return str5;
  }

  /** Get Icon by type */
  Story.getIconByType = function (type) {
    switch (type) {
      case 'global': return '';
      case 'local': return '';
      case 'confirmed':
      case 'dailyConfirmed': return ' <img src="images/icons/confirmed.svg" alt="confirmed" /> ';
      case 'active':
      case 'dailyActive': return ' <img src="images/icons/active.svg" alt="active" /> ';
      case 'recovered':
      case 'dailyRecovered': return ' <img src="images/icons/recovered.svg" alt="recovered" /> ';
      case 'deaths':
      case 'dailyDeaths': return ' <img src="images/icons/deaths.svg" alt="deaths" /> ';
      default: return '';
    }
  }
  //#endregion

  return Story;
})();
